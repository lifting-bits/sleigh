From d7f7be313580a6e0eef101848a3c86e3a3db4029 Mon Sep 17 00:00:00 2001
From: Eric Kilmer <eric.d.kilmer@gmail.com>
Date: Tue, 29 Oct 2024 15:30:57 -0400
Subject: [PATCH 4/5] Use string resize instead of reserve

assign will fix up the size to hold all of what's copied
---
 Ghidra/Features/Decompiler/src/decompile/cpp/stringmanage.cc | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/stringmanage.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/stringmanage.cc
index 5f5fa0c7b3..4cd77156f2 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/stringmanage.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/stringmanage.cc
@@ -67,7 +67,6 @@ void StringManager::assignStringData(StringData &data,const uint1 *buf,int4 size
 
 {
   if (charsize == 1 && numChars < maximumChars) {
-    data.byteData.reserve(size);
     data.byteData.assign(buf,buf+size);
   }
   else {
@@ -77,9 +76,9 @@ void StringManager::assignStringData(StringData &data,const uint1 *buf,int4 size
       return;
     string resString = s.str();
     int4 newSize = resString.size();
-    data.byteData.reserve(newSize + 1);
     const uint1 *ptr = (const uint1 *)resString.c_str();
     data.byteData.assign(ptr,ptr+newSize);
+    data.byteData.resize(newSize + 1, 0);
     data.byteData[newSize] = 0;		// Make sure there is a null terminator
   }
   data.isTruncated = (numChars >= maximumChars);
-- 
2.47.0

